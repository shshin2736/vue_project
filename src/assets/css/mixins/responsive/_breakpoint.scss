// breakpoint mediaquery  사용시
// $point : desktop-xxl, desktop-xl, desktop-l, desktop-s, tablet, mobile-l, mobile-s 포인트 선택
// $firstMobile : min-width : true, max-width : false

@mixin testmixin() {
  @media all and(max-width: 1024px) {
    @content;
  }
}

@mixin breakpoint($point, $firstMobile: false) {
  $mediaType: ();
  $exMediaType: ();

  $point-desktop-xxl: $desktop-xxl;
  $point-desktop-xl: $desktop-xl;
  $point-desktop-l: $desktop-l;
  $point-desktop-s: $desktop-s;
  $point-tablet: $tablet;
  $point-mob-l: $mob-l;
  $point-mob-s: $mob-s;

  @if $firstMobile == true {
    $mediaType: min-width;
    $exMediaType: max-width;
  } @else {
    $mediaType: max-width;
    $exMediaType: min-width;
    $point-desktop-xxl: $point-desktop-xxl - 1;
    $point-desktop-xl: $point-desktop-xl - 1;
    $point-desktop-l: $point-desktop-l - 1;
    $point-desktop-s: $point-desktop-s - 1;
    $point-tablet: $point-tablet - 1;
    $point-mob-l: $point-mob-l - 1;
    $point-mob-s: $point-mob-s - 1;
  }

  @if $point == desktop-xxl {
    @media all and(#{$mediaType}: $point-desktop-xxl) {
      @content;
    }
  } @else if $point == desktop-xl {
    @media all and(#{$mediaType}: $point-desktop-xl) {
      @content;
    }
  } @else if $point == desktop-l {
    @media all and(#{$mediaType}: $point-desktop-l) {
      @content;
    }
  } @else if $point == desktop-s {
    @media all and(#{$mediaType}: $point-desktop-s) {
      @content;
    }
  } @else if $point == tablet {
    @media all and(#{$mediaType}: $point-tablet) {
      @content;
    }
  } @else if $point == mobile-l {
    @media all and(#{$mediaType}: $point-mob-l) {
      @content;
    }
  } @else if $point == mobile-s {
    @media all and(#{$mediaType}: $point-mob-s) {
      @content;
    }
  } @else if $point == landscape {
    @media screen and(orientation: landscape) {
      @content;
    }
  } @else if $point == portrait {
    @media screen and(orientation: portrait) {
      @content;
    }
  }
}

@mixin respond-above($mq) {
  @media (min-width: $mq) {
    @content;
  }
}

@mixin respond-between($mq-min, $mq-max) {
  @media (min-width: $mq-min) and (max-width: $mq-max) {
    @content;
  }
}

@mixin respond-below($mq) {
  @media (max-width: $mq) {
    @content;
  }
}
